#За день машина проезжает n километров. Сколько дней нужно, чтобы проехать маршрут длиной m
#километров? При решении этой задачи нельзя пользоваться условной инструкцией if и циклами.

# n = int (input())
# m = int (input())

# print((m + n - 1)//n)

# В некоторой школе решили набрать три новых математических класса и оборудовать кабинеты для
# них новыми партами. За каждой партой может сидеть два учащихся. Известно количество учащихся в
# каждом из трех классов. Выведите наименьшее число парт, которое нужно приобрести для них.
# Input: 20 21 22(ввод чисел НЕ в одну строку) Output: 32

# a = int(input())
# b = int(input())
# c = int(input())

# s1 = ((a+1)//2)
# s2 = ((b+1)//2)
# s3 = ((c+1)//2)

# print(s1 + s2 + s3)

# Вагоны в электричке пронумерованы натуральными числами, начиная с 1 (при этом иногда вагоны
# нумеруются от «головы» поезда, а иногда – с  «хвоста»; это зависит от того, в какую сторону едет
# электричка). В каждом вагоне написан его номер. Витя сел в i-й вагон от головы поезда и обнаружил,
# что его вагон имеет номер j. Он хочет определить, сколько всего вагонов в электричке. Напишите
# программу, которая будет это делать или сообщать,что без дополнительной информации это сделать
# невозможно.Input: 3 4(ввод на разных строках) Output: 6

# i = int(input())
# j = int(input())

# if i - j == 0:
#     print(-1)
# else:
#     print(i + j -1)

# Дано натуральное число. Требуется определить,является ли год с данным номером високосным. Если
# год является високосным, то выведите YES, иначевыведите NO. Напомним, что в соответствии с
# григорианским календарем, год является високосным, если его номер кратен 4, но не кратен
# 100, а также если он кратен 400.Input: 2016 Output: YES

# n = int(input())

# if n % 4 == 0 and n % 100 != 0 or n % 400 == 0:
#     print("YES")
# else:
#     print("NO")

# Найдите сумму цифр трехзначного числа.

# n = int(input())
# if 100 <= n <= 999:
#   a = n // 100
#   b = (n % 100) // 10
#   c = n % 10
#   res = a + b + c
#   print(res)


# S = 60

# # Вычисляем количество журавликов, сделанных Петей и Сережей
# x = S // 6

# # Количество журавликов, сделанных Катей
# y = 2 * (x + x)

# print(x, y, x)

# Вы пользуетесь общественным транспортом? Вероятно, вы
# расплачивались за проезд и получали билет с номером. Счастливым
# билетом называют такой билет с шестизначным номером, где сумма
# первых трех цифр равна сумме последних трех. Т.е. билет с номером
# 385916 – счастливый, т.к. 3+8+5=9+1+6. Вам требуется написать
# программу, которая проверяет счастливость билета.


n = int(input())


# a1 = n // 100000
# a2 = (n % 100000) // 10000
# a3 = (n % 10000) // 1000
# a4 = (n % 1000) // 100
# a5 = (n % 100) // 10
# a6 = n % 10


# if a1 + a2 + a3 == a4 + a5 + a6:
#     print("yes")
# else:
#     print("no")

# Определите, можно ли от шоколадки размером a × b долек отломить c долек, если разрешается сделать один разлом по прямой между дольками (то есть разломить шоколадку на два прямоугольника).

# Выведите yes или no соответственно.

# a = 3
# b = 2
# c = 4

# if (a * b >= c) and ((c % a == 0) or (c % b == 0)):
#     print("yes")
# else:
#     print("no")

# На столе лежат n монеток. Некоторые из них лежат вверх
# решкой, а некоторые – гербом. Определите минимальное число
# монеток, которые нужно перевернуть, чтобы все монетки были
# повернуты вверх одной и той же стороной. Выведите минимальное
# количество монет, которые нужно перевернуть.


# coins = [0, 1, 0, 1, 1, 0]

# heads = 0  # количество монеток с гербом вверх
# tails = 0  # количество монеток с решкой вверх

# for coin in coins:
#     if coin == 0:
#         heads += 1
#     else:
#         tails += 1

# min_coins = min(heads, tails)  # минимальное количество монеток для переворота

# print(min_coins)

# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.
# Примечание: числа S и P задавать не нужно, они будут передаваться в тестах. В результате вы должны вывести все возможные пары чисел X и Y через пробел, такие что X <= Y.

# s = 12
# p = 27

# for x in range(1, s + 1):
#     if p % x == 0:  # проверяем, делится ли p на x без остатка
#         y = p // x  # находим значение y, делением p на x
#         if x + y == s and x <= y:
         
#          print(x, y)

# Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числаN.

n = 16
power_2 = 1

while power_2 <= n:
    print(power_2)
    power_2 *= 2

    
    

